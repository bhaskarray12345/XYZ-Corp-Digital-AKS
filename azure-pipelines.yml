# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


trigger:
- master

variables:

  # Environment name
  environmentName: 'test'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  containerRegistryServiceConn: 'XYZ-Corp-Digital-ACR-Service-Conn'
  kubernetesServiceConnection: 'XYZ-Corp-AKS-Conn'
  imageRepository: 'XYZCorpDigitalACR'
  namespace: 'default'
  imagePullSecret: imagesecret
  tag: $(Build.BuildId)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '$(containerRegistryServiceConn)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'manifests'
        publishLocation: 'pipeline'
   
        
- stage: Deploy
  displayName: Deploy stage
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
     - task: DownloadPipelineArtifact@2
       inputs:
         buildType: 'current'
         artifactName: 'manifests'
         targetPath: '$(System.ArtifactDirectory)'
         
     - task: KubernetesManifest@1
       inputs:
          action: 'createSecret'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: '$(kubernetesServiceConnection)'
          namespace: '$(namespace)'
          secretType: 'dockerRegistry'
          secretName: '$(imagePullSecret)'
          dockerRegistryEndpoint: '$(containerRegistryServiceConn)'
     - task: KubernetesManifest@1
       inputs:
          action: 'deploy'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: '$(kubernetesServiceConnection)'
          namespace: '$(namespace)'
          manifests: |
                $(System.ArtifactDirectory)/manifests/s/App-deployment-service.yml
          containers: |
                $(containerRegistry)/$(imageRepository):$(tag)